"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '34&4p%e6r68$95mcq%n+d%!^&0&r)cdahu@sy!6fd#k*-y@+eh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = (
    # django apps
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'django_filters',
    # thirt-party apps
    'corsheaders',
    'graphene_django',
    'sorl.thumbnail',
    'import_export',
    'constance',
    'constance.backends.database',
    # local apps
    'api',
    'ticket',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'graphql_jwt.middleware.JSONWebTokenMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pyconkr.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pyconkr.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'TEST': {
            'NAME': 'test_postgres',
        },
        'USER': 'postgres',
        'HOST': 'localhost',
        'PORT': 5432,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# XML Test Runner
TEST_RUNNER = 'xmlrunner.extra.djangotestrunner.XMLTestRunner'
TEST_OUTPUT_VERBOSE = 2
TEST_OUTPUT_DIR = 'test-reports'

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/


LANGUAGES = (
    ('ko', _('Korean')),
    ('en', _('English')),
)
LANGUAGE_CODE = 'ko'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

MODELTRANSLATION_DEFAULT_LANGUAGE = 'ko'
MODELTRANSLATION_LANGUAGES = ('ko', 'en')

# Graphene
GRAPHENE = {
    'SCHEMA': 'api.schema.schema',
    'MIDDLEWARE': [
        'graphql_jwt.middleware.JSONWebTokenMiddleware',
    ],
}

AUTHENTICATION_BACKENDS = [
    'graphql_jwt.backends.JSONWebTokenBackend',
    'api.oauth_tokenbackend.OAuthTokenBackend',
    'django.contrib.auth.backends.ModelBackend',
]

CORS_ORIGIN_ALLOW_ALL = True

# Media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = 'http://localhost:8000/media/'

CRONTAB_COMMAND_SUFFIX = '2>&1'
CRONJOBS = [
    ('* * * * *', 'pyconkr.cron.my_cron_job', '>> /web/cron.log')
]

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

CONSTANCE_CONFIG = {
    'IMP_DOM_USER_CODE': ('', '아임포트 국내용 유저 번호'),
    'IMP_DOM_API_KEY': ('', '아임포트 국내용 API KEY'),
    'IMP_DOM_API_SECRET': ('', '아임포트 국내용 API SECRET'),
    'IMP_INTL_USER_CODE': ('', '아임포트 해외용 유저 번호'),
    'IMP_INTL_API_KEY': ('', '아임포트 해외용 API KEY'),
    'IMP_INTL_API_SECRET': ('', '아임포트 해외용 API SECRET'),
    'EMAIL_USE_TLS': (True, '이메일 서버 TLS 사용 여부', bool),
    'EMAIL_HOST': ('email-smtp.us-west-2.amazonaws.com', '이메일 서버 Hostname'),
    'EMAIL_PORT': (587, '이메일 서버 Port', int),
    'EMAIL_HOST_USER': ('', '이메일 서버 Username'),
    'EMAIL_HOST_PASSWORD': ('', '이메일 서버 Password'),
    'SLACK_TOKEN': ('', 'Notification용 Slack Token'),
    'CFP_REVIEW_CATEGORY_MINIMUM': (2, 'CFP 리뷰 시에 최소로 선택할 수 있는 카테고리 개수', int),
    'CFP_REVIEW_COUNT': (7, '유저당 CFP 리뷰를 할당할 개수', int),
}

CONSTANCE_CONFIG_FIELDSETS = {
    'iamport': ('IMP_DOM_USER_CODE', 'IMP_DOM_API_KEY', 'IMP_DOM_API_SECRET',
                'IMP_INTL_USER_CODE', 'IMP_INTL_API_KEY', 'IMP_INTL_API_SECRET'),
    'SMTP': ('EMAIL_USE_TLS', 'EMAIL_HOST', 'EMAIL_PORT',
             'EMAIL_HOST_USER', 'EMAIL_HOST_PASSWORD'),
    'slack': ('SLACK_TOKEN',),
    'CFP': ('CFP_REVIEW_CATEGORY_MINIMUM', 'CFP_REVIEW_COUNT')
}
